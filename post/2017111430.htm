<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
<meta name="viewport"
      content="width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
<meta http-equiv="X-UA-Compatible" content="ie=edge">

    <meta name="author" content="Tommas">


    <meta name="subtitle" content="Tommas Blog">


    <meta name="description" content="Keep quiet time for time">



<title>Lucene的Field域和索引维护 | Tommas&#39;s Blog</title>



    <link rel="icon" href="/images/favicon-32x32-next.png">




    <!-- stylesheets list from _config.yml -->
    
    <link rel="stylesheet" href="/css/style.css">
    



    <!-- scripts list from _config.yml -->
    
    <script src="/js/script.js"></script>
    
    <script src="/js/tocbot.min.js"></script>
    



    
    
        
    


<meta name="generator" content="Hexo 7.3.0"></head>

<body>
    <script src="/js/jquery-2.0.3.min.js"></script>
    
<script src="/js/search.js"></script>

    <script type="text/javascript">
        var search_path = "search.xml";
        if (search_path.length == 0) {
            search_path = "search.xml";
        }
        var path = "/" + search_path;
        searchFunc(path, 'local-search-input', 'local-search-result');
        click_time=0;
    </script>
    <script>
        // this function is used to check current theme before page loaded.
        (() => {
            const currentTheme = window.localStorage && window.localStorage.getItem('theme') || '';
            const isDark = currentTheme === 'dark';
            const pagebody = document.getElementsByTagName('body')[0]
            if (isDark) {
                pagebody.classList.add('dark-theme');
                // mobile
                document.getElementById("mobile-toggle-theme").innerText = "· Dark"
            } else {
                pagebody.classList.remove('dark-theme');
                // mobile
                document.getElementById("mobile-toggle-theme").innerText = "· Light"
            }
        })();
    </script>

    <div class="wrapper">
        <header>
    <nav class="navbar">
        <div class="container">
            <div class="navbar-header header-logo"><a href="/">Tommas&#39;s Blog</a></div>
            <div class="menu navbar-right">
                
                    <a class="menu-item" href="/archives">Posts</a>
                
                    <a class="menu-item" href="/category">Categories</a>
                
                    <a class="menu-item" href="/tag">Tags</a>
                
                    <a class="menu-item" href="/about">About</a>
                
                    <a class="menu-item" href="/index">Site</a>
                
                    <a class="menu-item" href="/links">Links</a>
                
                   <a class="menu-item" onclick="$('#search-page').show(); $('#local-search-input')[0].focus();">Search</a>
                <input id="switch_default" type="checkbox" class="switch_default">
                <label for="switch_default" class="toggleBtn"></label>
            </div>
        </div>
    </nav>

    
    <nav class="navbar-mobile" id="nav-mobile">
        <div class="container">
            <div class="navbar-header">
                <div>
                    <a href="/">Tommas&#39;s Blog</a><a id="mobile-toggle-theme">·&nbsp;Light</a>
                </div>
                <div class="menu-toggle" onclick="mobileBtn()">&#9776; Menu</div>
            </div>
            <div class="menu" id="mobile-menu">
                
                    <a class="menu-item" href="/archives">Posts</a>
                
                    <a class="menu-item" href="/category">Categories</a>
                
                    <a class="menu-item" href="/tag">Tags</a>
                
                    <a class="menu-item" href="/about">About</a>
                
                    <a class="menu-item" href="/index">Site</a>
                
                    <a class="menu-item" href="/links">Links</a>
                
            </div>
        </div>
    </nav>

</header>
<script>
    var mobileBtn = function f() {
        var toggleMenu = document.getElementsByClassName("menu-toggle")[0];
        var mobileMenu = document.getElementById("mobile-menu");
        if(toggleMenu.classList.contains("active")){
           toggleMenu.classList.remove("active")
            mobileMenu.classList.remove("active")
        }else{
            toggleMenu.classList.add("active")
            mobileMenu.classList.add("active")
        }
    }
</script>

            <div class="main">
        <div style="z-index: 1000; position: fixed; background-color: rgba(0, 0, 0, 0.8);
        top: 0; bottom: 0; left: 0; right: 0; padding: 0 max(50% - 375px,5px); display: none;" id="search-page"
        onclick="if (Date.now()-click_time>=10) { this.style.display='none'; } quitting=1; ">
    <input id="local-search-input" style="height: 24px; position: relative; top: 24px; font-size: 16px;
        width: calc(100% - 50px); color: white; background-color: initial; padding: 12px 23px; border-radius: 5px; border: 2px solid #bbb; outline: 0;"
        onclick="click_time=Date.now()">
    <div id="local-search-result" style="width: 100%; position: relative; top: 24px;
        height: calc(100% - 105px);" onclick="click_time=Date.now()"></div>
</div>

                <div class="container">
    
    

    
    <article class="post-wrap">
        <header class="post-header">
            <h1 class="post-title">Lucene的Field域和索引维护</h1>
            
                <div class="post-meta">
                    
                        Author: <a itemprop="author" rel="author" href="/">Tommas</a>
                    

                    
                        <span class="post-time">
                        Date: <a href="#">November 30, 2017&nbsp;&nbsp;14:30:36</a>
                        </span>
                    
                    
                        <span class="post-category">
                    Category:
                            
                                <a href="/categories/Lucene/">Lucene</a>
                            
                        </span>
                    
                </div>
            
        </header>

        <div class="post-content">
            <p><img src="http://ovi3ob9p4.bkt.clouddn.com/TIETU/CT0054.jpg" alt="image"></p>
<p>一、Field域<br>1.Field属性<br>Field是文档中的域，包括Field名和Field值两部分，一个文档可以包括多个Field，Document只是Field的一个承载体，Field值即为要索引的内容，也是要搜索的内容。</p>
<span id="more"></span>
<p>是否分词(tokenized)<br>是：作分词处理，即将Field值进行分词，分词的目的是为了索引。<br>比如：商品名称、商品简介等，这些内容用户要输入关键字搜索，由于搜索的内容格式大、内容多需要分词后将语汇单元索引。</p>
<p>否：不作分词处理<br>比如：商品id、订单号、身份证号等</p>
<p>是否索引(indexed)<br>是：进行索引。将Field分词后的词或整个Field值进行索引，索引的目的是为了搜索。<br>比如：商品名称、商品简介分析后进行索引，订单号、身份证号不用分析但也要索引，这些将来都要作为查询条件。</p>
<p>否：不索引。该域的内容无法搜索到<br>比如：商品id、文件路径、图片路径等，不用作为查询条件的不用索引。</p>
<p>是否存储(stored)<br>是：将Field值存储在文档中，存储在文档中的Field才可以从Document中获取。<br>比如：商品名称、订单号，凡是将来要从Document中获取的Field都要存储。</p>
<p>否：不存储Field值，不存储的Field无法通过Document获取<br>比如：商品简介，内容较大不用存储。如果要向用户展示商品简介可以从系统的关系数据库中获取商品简介。</p>
<p>如果需要商品描述，则根据搜索出的商品ID去数据库中查询，然后显示出商品描述信息即可。</p>
<p>2.Field常用类型<br>开发中常用 的Filed类型，注意Field的属性，根据需求选择：</p>
<p>Field常用类型.PNG<br>3.Field改进代码<br>图书id：</p>
<p>是否分词：不用分词，因为不会根据商品id来搜索商品<br>是否索引：不索引，因为不需要根据图书ID进行搜索<br>是否存储：要存储，因为查询结果页面需要使用id这个值。<br>图书名称：</p>
<p>是否分词：要分词，因为要将图书的名称内容分词索引，根据关键搜索图书名称抽取的词。<br>是否索引：要索引。<br>是否存储：要存储。<br>图书价格：</p>
<p>是否分词：要分词，lucene对数字型的值只要有搜索需求的都要分词和索<br>引，因为lucene对数字型的内容要特殊分词处理，本例子可能要根据价格范<br>围搜索，需要分词和索引。<br>是否索引：要索引<br>是否存储：要存储<br>图书图片地址：</p>
<p>是否分词：不分词<br>是否索引：不索引<br>是否存储：要存储<br>图书描述：</p>
<p>是否分词：要分词<br>是否索引：要索引<br>是否存储：因为图书描述内容量大，不在查询结果页面直接显示，不存储。<br>不存储是来不在lucene的索引文件中记录，节省lucene的索引文件空间，<br>如果要在详情页面显示描述，思路：<br>从lucene中取出图书的id，根据图书的id查询关系数据库中book表<br>得到描述信息。<br>代码：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">createIndex</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line"><span class="comment">// 采集数据</span></span><br><span class="line"><span class="type">BookDao</span> <span class="variable">dao</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BookDaoImpl</span>();</span><br><span class="line">List&lt;Book&gt; list = dao.queryBooks();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将采集到的数据封装到Document对象中</span></span><br><span class="line">List&lt;Document&gt; docList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">Document document;</span><br><span class="line"><span class="keyword">for</span> (Book book : list) &#123;</span><br><span class="line">    document = <span class="keyword">new</span> <span class="title class_">Document</span>();</span><br><span class="line">    <span class="comment">// store:如果是yes，则说明存储到文档域中</span></span><br><span class="line">    <span class="comment">// 图书ID</span></span><br><span class="line">    <span class="comment">// 不分词、索引、存储 StringField</span></span><br><span class="line">    <span class="type">Field</span> <span class="variable">id</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringField</span>(<span class="string">&quot;id&quot;</span>, book.getId().toString(), Store.YES);</span><br><span class="line">    <span class="comment">// 图书名称</span></span><br><span class="line">    <span class="comment">// 分词、索引、存储 TextField</span></span><br><span class="line">    <span class="type">Field</span> <span class="variable">name</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TextField</span>(<span class="string">&quot;name&quot;</span>, book.getName(), Store.YES);</span><br><span class="line">    <span class="comment">// 图书价格</span></span><br><span class="line">    <span class="comment">// 分词、索引、存储 但是是数字类型，所以使用FloatField</span></span><br><span class="line">    <span class="type">Field</span> <span class="variable">price</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FloatField</span>(<span class="string">&quot;price&quot;</span>, book.getPrice(), Store.YES);</span><br><span class="line">    <span class="comment">// 图书图片地址</span></span><br><span class="line">    <span class="comment">// 不分词、不索引、存储 StoredField</span></span><br><span class="line">    <span class="type">Field</span> <span class="variable">pic</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StoredField</span>(<span class="string">&quot;pic&quot;</span>, book.getPic());</span><br><span class="line">    <span class="comment">// 图书描述</span></span><br><span class="line">    <span class="comment">// 分词、索引、不存储 TextField</span></span><br><span class="line">    <span class="type">Field</span> <span class="variable">description</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TextField</span>(<span class="string">&quot;description&quot;</span>,</span><br><span class="line">            book.getDescription(), Store.NO);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置boost值</span></span><br><span class="line">    <span class="keyword">if</span> (book.getId() == <span class="number">4</span>)</span><br><span class="line">        description.setBoost(<span class="number">100f</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 将field域设置到Document对象中</span></span><br><span class="line">    document.add(id);</span><br><span class="line">    document.add(name);</span><br><span class="line">    document.add(price);</span><br><span class="line">    document.add(pic);</span><br><span class="line">    document.add(description);</span><br><span class="line"></span><br><span class="line">    docList.add(document);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>二、索引维护<br>需求：</p>
<p>管理人员通过电商系统更改图书信息，这时更新的是数据库，如果使用lucene搜索图书信息需要在数据库表book信息变化时及时更新lucene索引库。</p>
<p>1.添加索引<br>调用 indexWriter.addDocument（doc）添加索引。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">createIndex</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line"><span class="comment">// 采集数据</span></span><br><span class="line"><span class="type">BookDao</span> <span class="variable">dao</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BookDaoImpl</span>();</span><br><span class="line">List&lt;Book&gt; list = dao.queryBooks();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将采集到的数据封装到Document对象中</span></span><br><span class="line">List&lt;Document&gt; docList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">Document document;</span><br><span class="line"><span class="keyword">for</span> (Book book : list) &#123;</span><br><span class="line">    document = <span class="keyword">new</span> <span class="title class_">Document</span>();</span><br><span class="line">    <span class="comment">// store:如果是yes，则说明存储到文档域中</span></span><br><span class="line">    <span class="comment">// 图书ID</span></span><br><span class="line">    <span class="type">Field</span> <span class="variable">id</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TextField</span>(<span class="string">&quot;id&quot;</span>, book.getId().toString(), Store.YES);</span><br><span class="line">    <span class="comment">// 图书名称</span></span><br><span class="line">    <span class="type">Field</span> <span class="variable">name</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TextField</span>(<span class="string">&quot;name&quot;</span>, book.getName(), Store.YES);</span><br><span class="line">    <span class="comment">// 图书价格</span></span><br><span class="line">    <span class="type">Field</span> <span class="variable">price</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TextField</span>(<span class="string">&quot;price&quot;</span>, book.getPrice().toString(),</span><br><span class="line">            Store.YES);</span><br><span class="line">    <span class="comment">// 图书图片地址</span></span><br><span class="line">    <span class="type">Field</span> <span class="variable">pic</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TextField</span>(<span class="string">&quot;pic&quot;</span>, book.getPic(), Store.YES);</span><br><span class="line">    <span class="comment">// 图书描述</span></span><br><span class="line">    <span class="type">Field</span> <span class="variable">description</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TextField</span>(<span class="string">&quot;description&quot;</span>,</span><br><span class="line">            book.getDescription(), Store.YES);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 将field域设置到Document对象中</span></span><br><span class="line">    document.add(id);</span><br><span class="line">    document.add(name);</span><br><span class="line">    document.add(price);</span><br><span class="line">    document.add(pic);</span><br><span class="line">    document.add(description);</span><br><span class="line"></span><br><span class="line">    docList.add(document);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建分词器，标准分词器</span></span><br><span class="line"><span class="type">Analyzer</span> <span class="variable">analyzer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StandardAnalyzer</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建IndexWriter</span></span><br><span class="line"><span class="type">IndexWriterConfig</span> <span class="variable">cfg</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">IndexWriterConfig</span>(Version.LUCENE_4_10_3,</span><br><span class="line">        analyzer);</span><br><span class="line"><span class="comment">// 指定索引库的地址</span></span><br><span class="line"><span class="type">File</span> <span class="variable">indexFile</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;E:\\11-index\\hm19\\&quot;</span>);</span><br><span class="line"><span class="type">Directory</span> <span class="variable">directory</span> <span class="operator">=</span> FSDirectory.open(indexFile);</span><br><span class="line"><span class="type">IndexWriter</span> <span class="variable">writer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">IndexWriter</span>(directory, cfg);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 通过IndexWriter对象将Document写入到索引库中</span></span><br><span class="line"><span class="keyword">for</span> (Document doc : docList) &#123;</span><br><span class="line">    writer.addDocument(doc);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 关闭writer</span></span><br><span class="line">writer.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>2.删除索引<br>2.1删除指定索引</p>
<p>根据Term项删除索引，满足条件的将全部删除。</p>
<p>Term是索引域中最小的单位。根据条件删除时，建议根据唯一键来进行删除。在solr中就是根据ID来进行删除和修改操作的。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteIndex</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line"><span class="comment">// 创建分词器，标准分词器</span></span><br><span class="line"><span class="type">Analyzer</span> <span class="variable">analyzer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StandardAnalyzer</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建IndexWriter</span></span><br><span class="line"><span class="type">IndexWriterConfig</span> <span class="variable">cfg</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">IndexWriterConfig</span>(Version.LUCENE_4_10_3,</span><br><span class="line">        analyzer);</span><br><span class="line"><span class="type">Directory</span> <span class="variable">directory</span> <span class="operator">=</span> FSDirectory</span><br><span class="line">        .open(<span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;E:\\11-index\\hcx\\&quot;</span>));</span><br><span class="line"><span class="comment">// 创建IndexWriter</span></span><br><span class="line"><span class="type">IndexWriter</span> <span class="variable">writer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">IndexWriter</span>(directory, cfg);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Terms</span></span><br><span class="line">writer.deleteDocuments(<span class="keyword">new</span> <span class="title class_">Term</span>(<span class="string">&quot;id&quot;</span>, <span class="string">&quot;1&quot;</span>));</span><br><span class="line"></span><br><span class="line">writer.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>2.2删除全部索引（慎用）</p>
<p>将索引目录的索引信息全部删除，直接彻底删除，无法恢复。慎用！</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 删除索引</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteIndex</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line"><span class="comment">// 1、指定索引库目录</span></span><br><span class="line"><span class="type">Directory</span> <span class="variable">directory</span> <span class="operator">=</span> FSDirectory.open(<span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;E:\\11-index\\0720&quot;</span>));</span><br><span class="line"><span class="comment">// 2、创建IndexWriterConfig</span></span><br><span class="line"><span class="type">IndexWriterConfig</span> <span class="variable">cfg</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">IndexWriterConfig</span>(Version.LATEST,</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">StandardAnalyzer</span>());</span><br><span class="line"><span class="comment">// 3、 创建IndexWriter</span></span><br><span class="line"><span class="type">IndexWriter</span> <span class="variable">writer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">IndexWriter</span>(directory, cfg);</span><br><span class="line"><span class="comment">// 4、通过IndexWriter来删除索引</span></span><br><span class="line"><span class="comment">// a)、删除全部索引</span></span><br><span class="line">writer.deleteAll();</span><br><span class="line"><span class="comment">// 5、关闭IndexWriter</span></span><br><span class="line">writer.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>建议参照关系数据库基于主键删除方式，所以在创建索引时需要创建一个主键Field，删除时根据此主键Field删除。</p>
<p>索引删除后将放在Lucene的回收站中，Lucene3.X版本可以恢复删除的文档，3.X之后无法恢复。</p>
<p>3.修改索引<br>更新索引是先删除再添加，建议对更新需求采用此方法并且要保证对已存在的索引执行更新，可以先查询出来，确定更新记录存在执行更新操作。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateIndex</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line"><span class="comment">// 创建分词器，标准分词器</span></span><br><span class="line"><span class="type">Analyzer</span> <span class="variable">analyzer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StandardAnalyzer</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建IndexWriter</span></span><br><span class="line"><span class="type">IndexWriterConfig</span> <span class="variable">cfg</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">IndexWriterConfig</span>(Version.LUCENE_4_10_3,</span><br><span class="line">        analyzer);</span><br><span class="line"></span><br><span class="line"><span class="type">Directory</span> <span class="variable">directory</span> <span class="operator">=</span> FSDirectory</span><br><span class="line">        .open(<span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;E:\\11-index\\hcx\\&quot;</span>));</span><br><span class="line"><span class="comment">// 创建IndexWriter</span></span><br><span class="line"><span class="type">IndexWriter</span> <span class="variable">writer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">IndexWriter</span>(directory, cfg);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 第一个参数：指定查询条件</span></span><br><span class="line"><span class="comment">// 第二个参数：修改之后的对象</span></span><br><span class="line"><span class="comment">// 修改时如果根据查询条件，可以查询出结果，则将以前的删掉，然后覆盖新的Document对象，如果没有查询出结果，则新增一个Document</span></span><br><span class="line"><span class="comment">// 修改流程即：先查询，再删除，在添加</span></span><br><span class="line"><span class="type">Document</span> <span class="variable">doc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Document</span>();</span><br><span class="line">doc.add(<span class="keyword">new</span> <span class="title class_">TextField</span>(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;lisi&quot;</span>, Store.YES));</span><br><span class="line">writer.updateDocument(<span class="keyword">new</span> <span class="title class_">Term</span>(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;zhangsan&quot;</span>), doc);</span><br><span class="line"></span><br><span class="line">writer.close();</span><br></pre></td></tr></table></figure>
<p>}</p>

        </div>

        
            <section class="post-copyright">
                
                    <p class="copyright-item">
                        <span>Author:</span>
                        <span>Tommas</span>
                    </p>
                
                
                    <p class="copyright-item">
                        <span>Permalink:</span>
                        <span><a href="https://m.is-local.org/post/2017111430.htm">https://m.is-local.org/post/2017111430.htm</a></span>
                    </p>
                
                
                    <p class="copyright-item">
                        <span>License:</span>
                        <span>© 2024 <a target="_blank" rel="noopener" href="http://creativecommons.org/licenses/by-nc/4.0/">CC-BY-NC-4.0</a> LICENSE</span>
                    </p>
                
                

            </section>
        
        <section class="post-tags">
            <div>
                <span>Tag(s):</span>
                <span class="tag">
                    
                    
                        <a href="/tags/Lucene/">🏷️ Lucene</a>
                    
                        
                </span>
            </div>
            <div>
                <a href="javascript:window.history.back();">back</a>
                <span>· </span>
                <a href="/">home</a>
            </div>
        </section>
        <section class="post-nav">
            
                <a class="prev" rel="prev" href="/post/2017111634.htm">XSS跨站脚本攻击漏洞修复</a>
            
            
            <a class="next" rel="next" href="/post/2017111334.htm">Lucene全文搜索解析</a>
            
        </section>


    </article>
</div>

            </div>
            <footer id="footer" class="footer">
    <div class="copyright">
      <span>© 2025 Tommas</span> 
    </div>
</footer>

    </div>
</body>

</html>
