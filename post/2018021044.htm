<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
<meta name="viewport"
      content="width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
<meta http-equiv="X-UA-Compatible" content="ie=edge">

    <meta name="author" content="Tommas">


    <meta name="subtitle" content="Tommas Blog">


    <meta name="description" content="Keep quiet time for time">



<title>Java成神之路-HTML和CSS（二） | Tommas&#39;s Blog</title>



    <link rel="icon" href="/images/favicon-32x32-next.png">




    <!-- stylesheets list from _config.yml -->
    
    <link rel="stylesheet" href="/css/style.css">
    



    <!-- scripts list from _config.yml -->
    
    <script src="/js/script.js"></script>
    
    <script src="/js/tocbot.min.js"></script>
    



    
    
        
    


<meta name="generator" content="Hexo 7.3.0"></head>

<body>
    <script src="/js/jquery-2.0.3.min.js"></script>
    
<script src="/js/search.js"></script>

    <script type="text/javascript">
        var search_path = "search.xml";
        if (search_path.length == 0) {
            search_path = "search.xml";
        }
        var path = "/" + search_path;
        searchFunc(path, 'local-search-input', 'local-search-result');
        click_time=0;
    </script>
    <script>
        // this function is used to check current theme before page loaded.
        (() => {
            const currentTheme = window.localStorage && window.localStorage.getItem('theme') || '';
            const isDark = currentTheme === 'dark';
            const pagebody = document.getElementsByTagName('body')[0]
            if (isDark) {
                pagebody.classList.add('dark-theme');
                // mobile
                document.getElementById("mobile-toggle-theme").innerText = "· Dark"
            } else {
                pagebody.classList.remove('dark-theme');
                // mobile
                document.getElementById("mobile-toggle-theme").innerText = "· Light"
            }
        })();
    </script>

    <div class="wrapper">
        <header>
    <nav class="navbar">
        <div class="container">
            <div class="navbar-header header-logo"><a href="/">Tommas&#39;s Blog</a></div>
            <div class="menu navbar-right">
                
                    <a class="menu-item" href="/archives">Posts</a>
                
                    <a class="menu-item" href="/category">Categories</a>
                
                    <a class="menu-item" href="/tag">Tags</a>
                
                    <a class="menu-item" href="/about">About</a>
                
                    <a class="menu-item" href="/index">Site</a>
                
                    <a class="menu-item" href="/links">Links</a>
                
                   <a class="menu-item" onclick="$('#search-page').show(); $('#local-search-input')[0].focus();">Search</a>
                <input id="switch_default" type="checkbox" class="switch_default">
                <label for="switch_default" class="toggleBtn"></label>
            </div>
        </div>
    </nav>

    
    <nav class="navbar-mobile" id="nav-mobile">
        <div class="container">
            <div class="navbar-header">
                <div>
                    <a href="/">Tommas&#39;s Blog</a><a id="mobile-toggle-theme">·&nbsp;Light</a>
                </div>
                <div class="menu-toggle" onclick="mobileBtn()">&#9776; Menu</div>
            </div>
            <div class="menu" id="mobile-menu">
                
                    <a class="menu-item" href="/archives">Posts</a>
                
                    <a class="menu-item" href="/category">Categories</a>
                
                    <a class="menu-item" href="/tag">Tags</a>
                
                    <a class="menu-item" href="/about">About</a>
                
                    <a class="menu-item" href="/index">Site</a>
                
                    <a class="menu-item" href="/links">Links</a>
                
            </div>
        </div>
    </nav>

</header>
<script>
    var mobileBtn = function f() {
        var toggleMenu = document.getElementsByClassName("menu-toggle")[0];
        var mobileMenu = document.getElementById("mobile-menu");
        if(toggleMenu.classList.contains("active")){
           toggleMenu.classList.remove("active")
            mobileMenu.classList.remove("active")
        }else{
            toggleMenu.classList.add("active")
            mobileMenu.classList.add("active")
        }
    }
</script>

            <div class="main">
        <div style="z-index: 1000; position: fixed; background-color: rgba(0, 0, 0, 0.8);
        top: 0; bottom: 0; left: 0; right: 0; padding: 0 max(50% - 375px,5px); display: none;" id="search-page"
        onclick="if (Date.now()-click_time>=10) { this.style.display='none'; } quitting=1; ">
    <input id="local-search-input" style="height: 24px; position: relative; top: 24px; font-size: 16px;
        width: calc(100% - 50px); color: white; background-color: initial; padding: 12px 23px; border-radius: 5px; border: 2px solid #bbb; outline: 0;"
        onclick="click_time=Date.now()">
    <div id="local-search-result" style="width: 100%; position: relative; top: 24px;
        height: calc(100% - 105px);" onclick="click_time=Date.now()"></div>
</div>

                <div class="container">
    
    
        <div class="post-toc">
    <div class="tocbot-list">
    </div>
    <div class="tocbot-list-menu">
        <a class="tocbot-toc-expand" onclick="expand_toc()">Expand all</a>
        <a onclick="go_top()">Back to top</a>
        <a onclick="go_bottom()">Go to bottom</a>
    </div>
</div>

<script>
    var tocbot_timer;
    var DEPTH_MAX = 6; // 为 6 时展开所有
    var tocbot_default_config = {
        tocSelector: '.tocbot-list',
        contentSelector: '.post-content',
        headingSelector: 'h1, h2, h3, h4, h5',
        orderedList: false,
        scrollSmooth: true,
        onClick: extend_click,
    };

    function extend_click() {
        clearTimeout(tocbot_timer);
        tocbot_timer = setTimeout(function() {
            tocbot.refresh(obj_merge(tocbot_default_config, {
                hasInnerContainers: true
            }));
        }, 420); // 这个值是由 tocbot 源码里定义的 scrollSmoothDuration 得来的
    }

    document.ready(function() {
        tocbot.init(obj_merge(tocbot_default_config, {
            collapseDepth: 1
        }));
    });

    function expand_toc() {
        var b = document.querySelector('.tocbot-toc-expand');
        var expanded = b.getAttribute('data-expanded');
        expanded ? b.removeAttribute('data-expanded') : b.setAttribute('data-expanded', true);
        tocbot.refresh(obj_merge(tocbot_default_config, {
            collapseDepth: expanded ? 1 : DEPTH_MAX
        }));
        b.innerText = expanded ? 'Expand all' : 'Collapse all';
    }

    function go_top() {
        window.scrollTo(0, 0);
    }

    function go_bottom() {
        window.scrollTo(0, document.body.scrollHeight);
    }

    function obj_merge(target, source) {
        for (var item in source) {
            if (source.hasOwnProperty(item)) {
                target[item] = source[item];
            }
        }
        return target;
    }
</script>
    

    
    <article class="post-wrap">
        <header class="post-header">
            <h1 class="post-title">Java成神之路-HTML和CSS（二）</h1>
            
                <div class="post-meta">
                    
                        Author: <a itemprop="author" rel="author" href="/">Tommas</a>
                    

                    
                        <span class="post-time">
                        Date: <a href="#">February 23, 2018&nbsp;&nbsp;10:44:36</a>
                        </span>
                    
                    
                        <span class="post-category">
                    Category:
                            
                                <a href="/categories/Java/">Java</a>
                            
                        </span>
                    
                </div>
            
        </header>

        <div class="post-content">
            <p><img src="https://s2.loli.net/2023/04/16/XDgYZ2RMLxIl7Vd.jpg"></p>
<p>Java成神之路-HTML和CSS</p>
<span id="more"></span>
<h1 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h1><h3 id="HTML整体结构"><a href="#HTML整体结构" class="headerlink" title="HTML整体结构"></a>HTML整体结构</h3><p>HTML基础设施</p>
<ul>
<li><p>文件应以“<!DOCTYPE ......>”首行顶格开始，推荐使用“<!DOCTYPE html>”。</p>
</li>
<li><p>必须申明文档的编码charset，且与文件本身编码保持一致，推荐使用UTF-8编码<meta charset="utf-8"/>。</p>
</li>
<li><p>根据页面内容和需求填写适当的keywords和description。</p>
</li>
<li><p>页面title是极为重要的不可缺少的一项。</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>NEC：更好的CSS方案<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;keywords&quot;</span> <span class="attr">content</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;description&quot;</span> <span class="attr">content</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;css/style.css&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;shortcut icon&quot;</span> <span class="attr">href</span>=<span class="string">&quot;img/favicon.ico&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;apple-touch-icon&quot;</span> <span class="attr">href</span>=<span class="string">&quot;img/touchicon.png&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

</li>
<li><p>结构顺序和视觉顺序基本保持一致结构顺序和视觉顺序基本保持一致</p>
<ul>
<li>按照从上至下、从左到右的视觉顺序书写HTML结构。</li>
<li>有时候为了便于搜索引擎抓取，我们也会将重要内容在HTML结构顺序上提前。</li>
<li>用div代替table布局，可以使HTML更具灵活性，也方便利用CSS控制。</li>
<li>table不建议用于布局，但表现具有明显表格形式的数据，table还是首选。</li>
</ul>
<p>结构、表现、行为三者分离，避免内联</p>
<ul>
<li>使用link将css文件引入，并置于head中。</li>
<li>使用script将js文件引入，并置于body底部。</li>
</ul>
<p>保持良好的简洁的树形结构</p>
<ul>
<li>每一个块级元素都另起一行，每一行都使用Tab缩进对齐（head和body的子元素不需要缩进）。删除冗余的行尾的空格。</li>
<li>使用4个空格代替1个Tab（大多数编辑器中可设置）。</li>
<li>对于内容较为简单的表格，建议将tr写成单行。</li>
<li>你也可以在大的模块之间用空行隔开，使模块更清晰。</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 侧栏内容区 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;m-side&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;side&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;sidein&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 热门标签 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;sideblk&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;m-hd3&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">&quot;tit&quot;</span>&gt;</span>热门标签<span class="tag">&lt;/<span class="name">h3</span>&gt;</span> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                ...</span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">            <span class="comment">&lt;!-- 最热TOP5 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;sideblk&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;m-hd3&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">&quot;tit&quot;</span>&gt;</span>最热TOP5<span class="tag">&lt;/<span class="name">h3</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;s-fc02 f-fr&quot;</span>&gt;</span>更多»<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                ...</span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- /侧栏内容区 --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>另外，请做到以下几点</p>
<ul>
<li><p>结构上如果可以并列书写，就不要嵌套。</p>
<p>如果可以写成<div></div><div></div>那么就不要写成<div><div></div></div></p>
</li>
<li><p>如果结构已经可以满足视觉和语义的要求，那么就不要有额外的冗余的结构。</p>
<p>比如<div><h2></h2></div>已经能满足要求，那么就不要再写成<div><div><h2></h2></div></div></p>
</li>
<li><p>一个标签上引用的className不要过多，越少越好。</p>
<p>比如不要出现这种情况：<div class="class1 class2 class3 class4"></div></p>
</li>
<li><p>对于一个语义化的内部标签，应尽量避免使用className。</p>
<p>比如在这样一个列表中，li标签中的itm应去除：<ul class="m-help"><li class="itm"></li><li class="itm"></li></ul></p>
</li>
</ul>
</li>
</ul>
<h3 id="HTML表单元素"><a href="#HTML表单元素" class="headerlink" title="HTML表单元素"></a>HTML表单元素</h3><h4 id="input元素"><a href="#input元素" class="headerlink" title="input元素"></a>input元素</h4><p>最重要的表单元素是 <em><input></em> 元素。</p>
<p><input> 元素根据不同的 <em>type</em> 属性，可以变化为多种形态。</p>
<p>注释：下一章讲解所有 HTML 输入类型。</p>
<h4 id="select元素（下拉列表）"><a href="#select元素（下拉列表）" class="headerlink" title="select元素（下拉列表）"></a>select元素（下拉列表）</h4><p><em><select></em> 元素定义<em>下拉列表</em>：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;cars&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;volvo&quot;</span>&gt;</span>Volvo<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;saab&quot;</span>&gt;</span>Saab<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;fiat&quot;</span>&gt;</span>Fiat<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;audi&quot;</span>&gt;</span>Audi<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="option元素定义待选择的选项。"><a href="#option元素定义待选择的选项。" class="headerlink" title="option元素定义待选择的选项。"></a>option元素定义待选择的选项。</h4><p>列表通常会把首个选项显示为被选选项。</p>
<p>您能够通过添加 selected 属性来定义预定义选项。</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;fiat&quot;</span> <span class="attr">selected</span>&gt;</span>Fiat<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="textarea元素"><a href="#textarea元素" class="headerlink" title="textarea元素"></a>textarea元素</h4><p><em><textarea></em> 元素定义多行输入字段（<em>文本域</em>）：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">&quot;message&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;10&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;30&quot;</span>&gt;</span></span><br><span class="line">The cat was playing in the garden.</span><br><span class="line"><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>以上 HTML 代码在浏览器中显示为：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">The <span class="built_in">cat</span> was playing <span class="keyword">in</span> the garden.</span><br></pre></td></tr></table></figure>

<h4 id="button元素"><a href="#button元素" class="headerlink" title="button元素"></a>button元素</h4><p><em><button></em> 元素定义可点击的<em>按钮</em>：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;alert(&#x27;Hello World!&#x27;)&quot;</span>&gt;</span>Click Me!<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>以上 HTML 代码在浏览器中显示为：</p>
<p>HTML5 增加了如下表单元素：</p>
<ul>
<li>datalist</li>
<li>keygen</li>
<li>output</li>
</ul>
<p>注释：默认地，浏览器不会显示未知元素。新元素不会破坏您的页面。</p>
<h4 id="HTML5-datalist元素"><a href="#HTML5-datalist元素" class="headerlink" title="HTML5 datalist元素"></a>HTML5 datalist元素</h4><p><em><datalist></em> 元素为 <input> 元素规定预定义选项列表。</p>
<p>用户会在他们输入数据时看到预定义选项的下拉列表。</p>
<p><input> 元素的 <em>list</em> 属性必须引用 <datalist> 元素的 <em>id</em> 属性。</p>
<p>实例</p>
<p>通过 <datalist> 设置预定义值的 <input> 元素：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;action_page.php&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">list</span>=<span class="string">&quot;browsers&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">datalist</span> <span class="attr">id</span>=<span class="string">&quot;browsers&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;Internet Explorer&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;Firefox&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;Chrome&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;Opera&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;Safari&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">datalist</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h1><h2 id="标签选择器"><a href="#标签选择器" class="headerlink" title="标签选择器"></a>标签选择器</h2><p>顾名思议，标签选择器是直接将HTML标签作为选择器，可以是p、h1、dl、strong等HTML标签。如：</p>
<p><img src="http://ovi3ob9p4.bkt.clouddn.com/Java/javaxuexi006.png"></p>
<h3 id="二、id选择器："><a href="#二、id选择器：" class="headerlink" title="二、id选择器："></a>二、id选择器：</h3><p>每一个标签他都有一个共同属性id,所以我们通常给页面元素定义id。如图所示.</p>
<p><img src="http://ovi3ob9p4.bkt.clouddn.com/Java/javaxuexi007.png"></p>
<p>其中”p1”,”p2”,”p3”是你自己定义的id名称。注意在前面加”#”号。<br>id选择器也同样支持后代选择器(针对嵌套标签) 如图所示:</p>
<p><img src="http://ovi3ob9p4.bkt.clouddn.com/Java/javaxuexi008.png"></p>
<h3 id="三、类（class）选择器："><a href="#三、类（class）选择器：" class="headerlink" title="三、类（class）选择器："></a>三、类（class）选择器：</h3><p>每一个标签同样都有一个类属性,所以在CSS里用一个点开头表示类别选择器定义，例如：</p>
<p><img src="http://ovi3ob9p4.bkt.clouddn.com/Java/javaxuexi009.png"></p>
<p>在页面中，用class&#x3D;”类别名”的方法调用,这个方法比较简单灵活，可以随时根据页面需要新建和删除。但需要避免多class综合症。</p>
<h3 id="四、群组选择器："><a href="#四、群组选择器：" class="headerlink" title="四、群组选择器："></a>四、群组选择器：</h3><p>当几个元素样式属性一样时，可以共同调用一个声明，元素之间用逗号分隔。如：</p>
<p><img src="http://ovi3ob9p4.bkt.clouddn.com/Java/javaxuexi010.png"></p>
<p>下面来看(标签,id,类)群组选择器如图:</p>
<p><img src="http://ovi3ob9p4.bkt.clouddn.com/Java/javaxuexi011.png"></p>
<p>使用组群选择器，将会大大的减化CSS代码，将具有多个相同属性的元素，合并群组进行选择，定义同样的CSS属性，这大大的提高了编码效率与CSS文件体积。</p>
<h3 id="五、后代选择器："><a href="#五、后代选择器：" class="headerlink" title="五、后代选择器："></a>五、后代选择器：</h3><p>后代选择器也称作为派生选择器,通过依据元素在其位置的上下文关系来定义样式，你可以使标记更加简洁。<br>在 CSS 中，通过这种方式来应用规则的选择器被称为上下文选择器 (contextual selectors)，这是由于它们依赖于上下文关系来应用或者避免某项规则。在 CSS2 中，它们称为派生选择器，但是无论你如何称呼它们，它们的作用都是相同的。<br>派生选择器允许你根据文档的上下文关系来确定某个标签的样式。通过合理地使用派生选择器，我们可以使 HTML 代码变得更加整洁。<br>比方说，你希望列表中的 strong 元素变为斜体字，而不是通常的粗体字，可以这样定义一个派生选择器：<br>请注意标记为 <strong>的蓝色代码的上下文关系：</strong></p>
<p><img src="http://ovi3ob9p4.bkt.clouddn.com/Java/javaxuexi012.png"><br>在上面的例子中，只有 li 元素中的 strong 元素的样式为斜体字，无需为 strong 元素定义特别的 class 或 id，代码更加简洁。</p>
<p>结合使用上面的五种CSS选择器，基本满足了CSS布局的需要，主要在于灵活的使用，特别是后代选择器的使用能大大的简化HTML文档，使HTML做到结构化明确，最小的代码实现同样的效果。<br>选择器讲完了,我们来看看选择器的优先级.</p>
<h3 id="六-比较器的优先级"><a href="#六-比较器的优先级" class="headerlink" title="六 比较器的优先级"></a>六 比较器的优先级</h3><p>比较同一级别的个数，数量多的优先级高，如果相同即比较下一级别的个数 ，至于各级别的优先级，大家应该已经很清楚了，就是：</p>
<figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">important &gt; 内联 &gt; ID &gt; 类 &gt; 标签 |<span class="string"> 伪类 </span>|<span class="string"> 属性选择 &gt; 伪对象 &gt; 继承 &gt; 通配符 通配符 &gt; 继承1</span></span><br></pre></td></tr></table></figure>

<p>这也就解释了为什么11个标签的定义会比不上1个类的定义，1个类加11个标签会比不上2个类的权重高。</p>
<p>选择器的优先级计算细则就显得很重要了。<br>之前有人说选择器的优先级是tagname&#x3D;1,classname&#x3D;10,id&#x3D;100, 因此选择器 #demo &gt; ul &gt; .active的优先级就是 100+10+1 &#x3D; 111,实际上真是这么计算的嘛，难道10个class就和一个id的优先级是一样的？</p>
<p>下面看看官方对选择器的定义：<br>一个选择器的优先级由四个数字a,b,c,d确定。当比较两个选择器时，先比较a，a值大的优先级高，如果a相等则比较b，b值大的优先级高，以此类推。因此，无论b的值多大，也不会对a值的比较造成影响。</p>
<figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a由style确定，如果一个属性由元素上的style属性定义则a为<span class="number">1</span>，否则a为<span class="number">0</span></span><br><span class="line">b是id的数量</span><br><span class="line">c是<span class="keyword">class</span>和伪类以及属性的数量</span><br><span class="line"><span class="symbol">d</span>是<span class="symbol">tagname</span>以及伪元素的数量<span class="symbol">1234</span></span><br></pre></td></tr></table></figure>

<p>按照这个规则，我们来看看下面这个选择器的优先级：</p>
<p><img src="http://ovi3ob9p4.bkt.clouddn.com/Java/javaxuexi013.png"></p>
<p>下面我们来看一下优先级的例子,如图所示:</p>
<p><img src="http://ovi3ob9p4.bkt.clouddn.com/Java/javaxuexi014.png"></p>
<p>上例中的元素是绿色的，因为内联元素的优先级最高<br>同时也可以得出结论，低优先级选择器的叠加是不会影响高优先级的选择器的.</p>
<h2 id="CSS引入方式"><a href="#CSS引入方式" class="headerlink" title="CSS引入方式"></a>CSS引入方式</h2><h3 id="内嵌式"><a href="#内嵌式" class="headerlink" title="内嵌式"></a>内嵌式</h3><p>通过<code>&lt;style&gt; &lt;/style&gt;</code>来书写CSS代码。</p>
<p>只能应用于当前网页，不能被其它网页共享。</p>
<p>注意：<style>标记可以放在网页的任何地方，但一般放在<head>。</p>
<h3 id="外联式"><a href="#外联式" class="headerlink" title="外联式"></a>外联式</h3><p>通过<link>标记来引入外部的CSS文件(.css)。</p>
<p>可以被其它网页共享。public.css index.css news.css about.css</p>
<p>格式：</p>
<figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;link <span class="attribute">href</span>=“CSS的URL” <span class="attribute">rel</span>=“stylesheet” <span class="attribute">type</span>=“text/css” /&gt;</span><br></pre></td></tr></table></figure>

<p>注意：<link>标记只能放在<head>中</p>
<h3 id="行内样式"><a href="#行内样式" class="headerlink" title="行内样式"></a>行内样式</h3><p>通过style的属性来书写CSS代码。</p>
<p>每一个HTML元素，都有 style、class、id、name、title 属性。</p>
<p>举例：</p>
<figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">&lt;p style=“font-size<span class="number">:24</span>px;”&gt;</span><span class="section">&lt;/p&gt;</span></span><br></pre></td></tr></table></figure>

<p>CSS的字体&#x2F;文本属性</p>
<p>Font-size：文字大小</p>
<p>Font-weight：加粗</p>
<p>Font-style：斜体</p>
<p>Color：颜色</p>
<p>Line-height：行高</p>
<p>Text-indent：首行缩进</p>
<p>Text-align：水平对齐</p>
<p>Letter-spacing：字符间距</p>
<p>CSS列表</p>
<p>List-style-type：列表类型，取值：none、circle、 square</p>
<p>List-style-position：符号位置，取值：inside、outside</p>
<p>List-style-image：图片路径，举例：list-style-image:url(images&#x2F;li01.gif);</p>

        </div>

        
            <section class="post-copyright">
                
                    <p class="copyright-item">
                        <span>Author:</span>
                        <span>Tommas</span>
                    </p>
                
                
                    <p class="copyright-item">
                        <span>Permalink:</span>
                        <span><a href="https://m.is-local.org/post/2018021044.htm">https://m.is-local.org/post/2018021044.htm</a></span>
                    </p>
                
                
                    <p class="copyright-item">
                        <span>License:</span>
                        <span>© 2024 <a target="_blank" rel="noopener" href="http://creativecommons.org/licenses/by-nc/4.0/">CC-BY-NC-4.0</a> LICENSE</span>
                    </p>
                
                

            </section>
        
        <section class="post-tags">
            <div>
                <span>Tag(s):</span>
                <span class="tag">
                    
                    
                        <a href="/tags/Java/">🏷️ Java</a>
                    
                        
                </span>
            </div>
            <div>
                <a href="javascript:window.history.back();">back</a>
                <span>· </span>
                <a href="/">home</a>
            </div>
        </section>
        <section class="post-nav">
            
                <a class="prev" rel="prev" href="/post/2018021144.htm">Java成神之路-JavaScript（三）</a>
            
            
            <a class="next" rel="next" href="/post/2018022244.htm">Java成神之路——框架图（一）</a>
            
        </section>


    </article>
</div>

            </div>
            <footer id="footer" class="footer">
    <div class="copyright">
      <span>© 2024 Tommas</span> 
    </div>
</footer>

    </div>
</body>

</html>
